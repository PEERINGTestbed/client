export varrun="$progdir/var"

export bird_exec="bird"
export birdc_exec="birdc"
export bird_sock="$varrun/bird.ctl"
export bird_cfgs="$progdir/configs/bird"
export bird_cfgfile="$bird_cfgs/bird.conf"
export bird_routes="$bird_cfgs/route-announcements"
export bird_filters="$bird_cfgs/prefix-filters"

export bird6_exec="bird6"
export birdc6_exec="birdc6"
export bird6_sock="$varrun/bird6.ctl"
export bird6_cfgs="$progdir/configs/bird6"
export bird6_cfgfile="$bird6_cfgs/bird6.conf"
export bird6_routes="$bird6_cfgs/route-announcements"
export bird6_filters="$bird6_cfgs/prefix-filters"

export openvpn_cfgs="$progdir/configs/openvpn"

export mux2dev_db="$varrun/mux2dev.txt"
export prefix_db="$progdir/prefixes.txt"
export prefix6_db="$progdir/prefixes6.txt"
export kernel_table=151

load_mux2dev () {
    declare -gA mux2dev
    while read fmux fdev ; do
        mux2dev[$fmux]=$fdev
    done < $mux2dev_db
}

term () {
    echo $1
    exit 0
}

die () {
    echo $1
    exit 1
}

mkdir -p $varrun

export -f load_mux2dev
export -f term
export -f die

if [ ! -s $mux2dev_db ] ; then
    echo "rebuilding $mux2dev_db"
    for fn in $(ls $openvpn_cfgs/*.conf) ; do
        name=$(basename $fn)
        name=${name%%.conf}
        echo -n "$name " >> $mux2dev_db
        grep -Ee "^dev " $fn | cut -d " " -f 2 >> $mux2dev_db
    done
fi

if [ ! -s $prefix_db ] ; then
    echo "error: $prefix_db not found."
    echo "list the IPv4 prefixes you will announce in $prefix_db."
    die "create an empty file if you will not announce IPv4 prefixes."
fi

if [ ! -s $prefix6_db ] ; then
    echo "error: $prefix6_db not found."
    echo "list the IPv6 prefixes you will announce in $prefix6_db."
    die "create an empty file if you will not announce IPv6 prefixes."
fi


# vim: ft=sh
