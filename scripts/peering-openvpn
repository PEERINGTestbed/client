#!/bin/bash
set -eu

usage () {
    cat <<-EOF
usage: $0 status|log mux|up mux|down mux

status      Show the status of configured OpenVPN tunnels.

log mux     Show log file for mux.

up mux      Bring tunnel to mux up.

down mux    Bring tunnel to mux down.

EOF
    exit 0
}

mux_status_check() {
    local mux=$1
    local dev=${mux2dev[$mux]:-unset}
    test "$dev" != unset || die "error [mux $mux unknown]"
    if ! echo quit | socat - "UNIX:var/$mux.sock" &> /dev/null ; then
        rm -f "$varrun/$mux.pid"
        rm -f "$varrun/$mux.sock"
        rm -f "$varrun/$mux.updown"
        mstat="down"
        return
    fi
    local statfn="$varrun/$mux.updown"
    if [ ! -s "$statfn" ] ; then
        echo "OpenVPN status files in inconsistent state [$statfn missing]"
        mstat="up 0.0.0.0 ::1 [$statfn missing]"
    else
        mstat=$(head -n 1 "$statfn")
    fi
}

if ! which socat > /dev/null ; then die "PEERING requires the socat tool" ; fi
test $# -ge 1 || usage
test $EUID -eq 0 || die "OpenVPN requires root access."

declare -A mux2dev
while read -r mux dev ; do
    mux2dev[$mux]=$dev
done < "$mux2dev_db"

case $1 in
up)
    test $# -ge 2 || usage
    mux=$2
    mux_status_check "$mux"
    if [[ $mstat =~ ^up.*$ ]] ; then term "tunnel $mux already up" ; fi
    if ! openvpn --cd "$progdir" --config "$openvpn_cfgs/$mux.conf" ; then
        die "openvpn did not start correctly, please check logs"
    fi
    ;;
down)
    test $# -ge 2 || usage
    mux=$2
    mux_status_check "$mux"
    if [[ $mstat =~ ^down$ ]] ; then term "tunnel $mux already down" ; fi
    dev=${mux2dev[$mux]}
    echo "signal SIGTERM" | socat - "UNIX:var/$mux.sock" > /dev/null
    rm -f "$varrun/$mux.pid"
    rm -f "$varrun/$mux.sock"
    rm -f "$varrun/$mux.updown"
    ;;
log)
    test $# -ge 2 || usage
    mux=$2
    mux_status_check "$mux"
    echo "$mux ${mux2dev[$mux]} $mstat"
    cat "$varrun/$mux.log"
    ;;
status)
    for mux in "${!mux2dev[@]}" ; do
        mux_status_check "$mux"
        echo "$mux ${mux2dev[$mux]} $mstat"
    done | sort
    ;;
*)
    usage
    ;;
esac
